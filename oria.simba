(*
  erNoError=0, erCannotImport=1, erInvalidType=2, erInternalError=3, erInvalidHeader=4, erInvalidOpcode=5, erInvalidOpcodeParameter=6, erNoMainProc=7, erOutOfGlobalVarsRange=8, erOutOfProcRange=9, erOutOfRange=10, erOutOfStackRange=11, erTypeMismatch=12, erUnexpectedEof=13, erVersionError=14, erDivideByZero=15, erMathError=16, erCouldNotCallProc=17, erOutofRecordRange=18, erOutOfMemory=19, erException=20, erNullPointerException=21, erNullVariantError=22, erInterfaceNotSupported=23, erCustomError=24
*)

{$loadlib proSocks}

type tCharacter=record
  bounds:               tBox;
  color:                integer;
  height:               integer;
  id:                   integer;
  index:                integer;
  letter:               char;
  position:             tPoint;
  width:                integer;
end;

type tCharacters=array of tCharacter;

type tCountDown=integer;

type tModel=record
  bounds:               tBox;
  height:               integer;
  id:                   integer;
  index:                integer;
  position:             tPoint;
  scale:                integer;
  vertices:             tPointArray;
  width:                integer;
end;

type tModels=array of tModel;

type tTexture=record
  bounds:               tBox;
  color:                integer;
  height:               integer;
  id:                   integer;
  index:                integer;
  opacity:              integer;
  position:             tPoint;
  width:                integer;
end;

type tTextures=array of tTexture;

type tControls=record
  backpack:             char;
  defence:              char;
  familiar:             char;
  heal:                 char;
  magic:                char;
  melee:                char;
  pray:                 char;
  prayer:               char;
  ranged:               char;
  retaliate:            char;
  run:                  char;
  skill:                char;
  special:              char;
  task:                 char;
  worn:                 char;
end;

(*
  ogl.keyboard
*)

type tKeyboard=pointer;

(*
  ogl.mouse
*)

type tMouse=pointer;

(*
  ogl.cache
*)

type tCache=record
  character:            tCharacters;
  model:                tModels;
  texture:              tTextures;
end;

(*
  ogl.interfaces.*
*)

type tBackpack=         pointer;
type tBank=             pointer;
type tChat=             pointer;
type tDefence=          pointer;
type tMagic=            pointer;
type tMelee=            pointer;
type tPrayer=           pointer;
type tRanged=           pointer;
type tSkill=            pointer;
type tTask=             pointer;
type tWorn=             pointer;

type tOGL=record
  cache:                tCache;
end;

var
  backpack:             tBackPack;
  bank:                 tBank;
  chat:                 tChat;
  controls:             tControls;
  defence:              tDefence;
  keyboard:             tKeyboard;
  magic:                tMagic;
  melee:                tMelee;
  mouse:                tMouse;
  ogl:                  tOGL;
  prayer:               tPrayer;
  ranged:               tRanged;
  skill:                tSkill;
  task:                 tTask;
  worn:                 tWorn;

{$i core\math.simba}

{$i method\oria\tCountDown.simba}

{$i method\oria\tMouse.simba}
{$i method\oria\tKeyboard.simba}

{$i method\oria\tOGL.simba}

{$i method\oria\tCharacter.simba}
{$i method\oria\tCharacters.simba}
{$i method\oria\tModel.simba}
{$i method\oria\tModels.simba}
{$i method\oria\tTexture.simba}
{$i method\oria\tTextures.simba}

{$i method\standard\boolean.simba}
{$i method\standard\char.simba}
{$i method\standard\integer.simba}
{$i method\standard\pointer.simba}
{$i method\standard\string.simba}
{$i method\standard\tBox.simba}
{$i method\standard\tBoxArray.simba}
{$i method\standard\tCharArray.simba}
{$i method\standard\tIntegerArray.simba}
{$i method\standard\tPoint.simba}
{$i method\standard\tPointArray.simba}
{$i method\standard\tStringArray.simba}
{$i method\standard\variant.simba}




begin
  clearDebug();

  backpack:=            @ogl;
  bank:=                @ogl;
  chat:=                @ogl;
  defence:=             @ogl;
  keyboard:=            @ogl;
  magic:=               @ogl;
  melee:=               @ogl;
  mouse:=               @ogl;
  prayer:=              @ogl;
  ranged:=              @ogl;
  skill:=               @ogl;
  task:=                @ogl;
  worn:=                @ogl;

  (* Not used by RS3 defaults: q e y f z [ ] f ; ' z x c v , . / *)
  (*             ...continued: insert home delete end            *)

  controls.backpack:=   ogl.load('controls','backpack', 'b');
  controls.defence:=    ogl.load('controls','defence',  'k');
  controls.familiar:=   ogl.load('controls','familiar', 'f');
  controls.heal:=       ogl.load('controls','heal',     '');
  controls.magic:=      ogl.load('controls','magic',    'u');
  controls.melee:=      ogl.load('controls','melee',    'i');
  controls.pray:=       ogl.load('controls','pray',     '');
  controls.prayer:=     ogl.load('controls','prayer',   'p');
  controls.ranged:=     ogl.load('controls','ranged',   'o');
  controls.retaliate:=  ogl.load('controls','retaliate','');
  controls.run:=        ogl.load('controls','run',      'r');
  controls.skill:=      ogl.load('controls','skill',    'h');
  controls.special:=    ogl.load('controls','special',  '');
  controls.task:=       ogl.load('controls','task',     'j');
  controls.worn:=       ogl.load('controls','worn',     'n');
end;

{$f-}
