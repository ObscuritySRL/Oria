(*
  erNoError=0, erCannotImport=1, erInvalidType=2, erInternalError=3, erInvalidHeader=4, erInvalidOpcode=5, erInvalidOpcodeParameter=6, erNoMainProc=7, erOutOfGlobalVarsRange=8, erOutOfProcRange=9, erOutOfRange=10, erOutOfStackRange=11, erTypeMismatch=12, erUnexpectedEof=13, erVersionError=14, erDivideByZero=15, erMathError=16, erCouldNotCallProc=17, erOutofRecordRange=18, erOutOfMemory=19, erException=20, erNullPointerException=21, erNullVariantError=22, erInterfaceNotSupported=23, erCustomError=24
*)

{$loadlib proSocks}

type tCharacter=record
  bounds:                           tBox;
  color:                            integer;
  height:                           integer;
  id:                               integer;
  letter:                           char;
  position:                         tPoint;
  width:                            integer;
end;

type tCharacters=array of tCharacter;

type tCountDown=integer;

type tKeyboard=record
  speed:                            integer;
end;

type tModel=record
  bounds:                           tBox;
  height:                           integer;
  id:                               integer;
  position:                         tPoint;
  scale:                            integer;
  width:                            integer;
end;

type tModels=array of tModel;

type tMouse=record
  speed:                            integer;
end;

type tTexture=record
  bounds:                           tBox;
  color:                            integer;
  height:                           integer;
  id:                               integer;
  position:                         tPoint;
  width:                            integer;
end;

type tTextures=array of tTexture;

type tOGLCache=record
  character:                        tCharacters;
  model:                            tModels;
  texture:                          tTextures;
end;

type tOGLControlAction=record
  familiar:                         char;
  heal:                             char;
  prayer:                           char;
  retaliate:                        char;
  run:                              char;
  special:                          char;
end;

type tOGLControlInterfaces=record
  backpack:                         char;
  defence:                          char;
  magic:                            char;
  melee:                            char;
  prayer:                           char;
  ranged:                           char;
  skill:                            char;
  task:                             char;
  worn:                             char;
end;

type tOGLControl=record
  actions:                          tOGLControlAction;
  interfaces:                       tOGLControlInterfaces;
end;

type tOGLSize=record
  box:                              integer;
  character:                        integer;
  integer:                          integer;
  model:                            integer;
  point:                            integer;
  texture:                          integer;
end;

type tOGL=record
  cache:                            tOGLCache;
  controls:                         tOGLControl;
  keyboard:                         tKeyboard;
  mouse:                            tMouse;
  size:                             tOGLSize;
end;

var
  ogl:                              tOGL;

{$i method\tMouse.simba}
{$i method\tKeyboard.simba}

{$i method\char.simba}
{$i method\integer.simba}
{$i method\pointer.simba}
{$i method\string.simba}
{$i method\tBox.simba}
{$i method\tBoxArray.simba}
{$i method\tCharArray.simba}
{$i method\tIntegerArray.simba}
{$i method\tPoint.simba}
{$i method\tPointArray.simba}
{$i method\tStringArray.simba}
{$i method\variant.simba}

{$i method\tCountDown.simba}

{$i method\tOGL.simba}

{$i method\tCharacter.simba}
{$i method\tCharacters.simba}
{$i method\tModel.simba}
{$i method\tModels.simba}
{$i method\tTexture.simba}
{$i method\tTextures.simba}



begin
  clearDebug();

  (* Not used by RS3 defaults: q e y f z [ ] f ; ' z x c v , . / *)
  (*             ...continued: insert home delete end            *)

  ogl.controls.actions.familiar:=   ogl.load('controls.actions',    'familiar', 'f');
  ogl.controls.actions.heal:=       ogl.load('controls.actions',    'heal',     '');
  ogl.controls.actions.prayer:=     ogl.load('controls.actions',    'prayer',   '');
  ogl.controls.actions.retaliate:=  ogl.load('controls.actions',    'retaliate','');
  ogl.controls.actions.run:=        ogl.load('controls.actions',    'run',      'r');
  ogl.controls.actions.special:=    ogl.load('controls.actions',    'special',  '');
  ogl.controls.interfaces.backpack:=ogl.load('controls.interfaces', 'backpack', 'b');
  ogl.controls.interfaces.defence:= ogl.load('controls.interfaces', 'defence',  'k');
  ogl.controls.interfaces.magic:=   ogl.load('controls.interfaces', 'magic',    'u');
  ogl.controls.interfaces.melee:=   ogl.load('controls.interfaces', 'melee',    'i');
  ogl.controls.interfaces.prayer:=  ogl.load('controls.interfaces', 'prayer',   'p');
  ogl.controls.interfaces.ranged:=  ogl.load('controls.interfaces', 'ranged',   'o');
  ogl.controls.interfaces.skill:=   ogl.load('controls.interfaces', 'skill',    'h');
  ogl.controls.interfaces.task:=    ogl.load('controls.interfaces', 'task',     'j');
  ogl.controls.interfaces.worn:=    ogl.load('controls.interfaces', 'worn',     'n');

  ogl.keyboard.speed:=              ogl.load('keyboard',            'speed',    200);

  ogl.mouse.speed:=                 ogl.load('mouse',               'speed',    350);

  ogl.size.box:=                    sizeOf(tBox);
  ogl.size.character:=              sizeOf(tCharacter);
  ogl.size.integer:=                sizeOf(integer);
  ogl.size.model:=                  sizeOf(tModel);
  ogl.size.point:=                  sizeOf(tPoint);
  ogl.size.texture:=                sizeOf(tTexture);
end;

{$f-}
