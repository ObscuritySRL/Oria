(*
  TMOUSE
*)

procedure tMouse.down(vBox:tBox);
var _Position:tPoint;
begin
  _Position:=self.position();
  if _Position.inside(vBox) and (random(50)<>0) then
    self.down(_Position)
  else
    self.down(vBox.point());
end;

procedure tMouse.down(vPoint:tPoint);overload;
begin
  scrollMouse(vPoint.x,vPoint.y,-1);
  wait(self.speed.normal());
end;

procedure tMouse.left(vBox:tBox);
var _Position:tPoint;
begin
  _Position:=self.position();
  if _Position.inside(vBox) and (random(50)<>0) then
    self.left(_Position)
  else
    self.left(vBox.point());
end;

procedure tMouse.left(vPoint:tPoint);overload;
begin
  clickMouse(vPoint.x,vPoint.y,1);
  wait(self.speed.normal());
end;

procedure tMouse.move(vBox:tBox);
begin
  if (not self.position().inside(vBox)) or (random(50)=0) then
    self.move(vBox.point());
end;

procedure tMouse.move(vPoint:tPoint);overload;
begin moveMouse(vPoint.x,vPoint.y);end;

procedure tMouse.right(vBox:tBox);
var _Position:tPoint;
begin
  _Position:=self.position();
  if _Position.inside(vBox) and (random(50)<>0) then
    self.right(_Position)
  else
    self.right(vBox.point());
end;

procedure tMouse.right(vPoint:tPoint);overload;
begin
  clickMouse(vPoint.x,vPoint.y,0);
  wait(self.speed.normal());
end;

procedure tMouse.up(vBox:tBox);
var _Position:tPoint;
begin
  _Position:=self.position();
  if _Position.inside(vBox) and (random(50)<>0) then
    self.up(_Position)
  else
    self.up(vBox.point());
end;

procedure tMouse.up(vPoint:tPoint);overload;
begin
  scrollMouse(vPoint.x,vPoint.y,1);
  wait(self.speed.normal());
end;

function tMouse.position():tPoint;
var
  _X,
    _Y:integer;
begin
  getMousePos(_X,_Y);
  exit(tPoint([_X,_Y]));
end;
